const HEX_R: f32 = 0.8660254037844386 * 0.5; //((1.0 - 0.5 * 0.5) as f64).sqrt();

//    c-----b
//   /       \
//  d    y    a
//   \       /
//    e-----f
pub static HEXATILE_VERTICES: [f32; 3 * (6 + 6)] = [
    // bottom
    0.5, 0.0, 0.0, // 0:a
    0.25, 0.0, -HEX_R, // 1:b
    -0.25, 0.0, -HEX_R, // 2:c
    -0.5, 0.0, 0.0, // 3:d
    -0.25, 0.0, HEX_R, // 4:e
    0.25, 0.0, HEX_R, // 5:f
    // top
    0.5, 0.2, 0.0, // 6:a
    0.25, 0.2, -HEX_R, // 7:b
    -0.25, 0.2, -HEX_R, // 8:c
    -0.5, 0.2, 0.0, // 9:d
    -0.25, 0.2, HEX_R, // 10:e
    0.25, 0.2, HEX_R, // 11:f
];

pub static HEXATILE_INDICES: [u8; 3 * (4 + 4 + 12)] = [
    // top (CCW fan)
    6, 7, 8, //br
    6, 8, 9, //br
    6, 9, 10, //br
    6, 10, 11, //br
    // bottom (CW fan)
    0, 5, 4, //br
    0, 4, 3, //br
    0, 3, 2, //br
    0, 2, 1, //br
    // sides (strip)
    0, 1, 7, //br
    0, 7, 6, //br
    1, 2, 8, //br
    1, 8, 7, //br
    2, 3, 9, //br
    2, 9, 8, //br
    3, 4, 10, //br
    3, 10, 9, //br
    4, 5, 11, //br
    4, 11, 10, //br
    5, 0, 6, //br
    5, 6, 11, //br
];

pub static SYSTEM_LINES: [f32; 3 * 6] = [
    -1000.0, 0.0, 0.0, //br
    1000.0, 0.0, 0.0, //br
    0.0, -1000.0, 0.0, //br
    0.0, 1000.0, 0.0, //br
    0.0, 0.0, -1000.0, //br
    0.0, 0.0, 1000.0, //br
];
